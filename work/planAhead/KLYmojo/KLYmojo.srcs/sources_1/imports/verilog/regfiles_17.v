/*
   This file was generated automatically by the Mojo IDE version B1.3.6.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module regfiles_17 (
    input clk,
    input rst,
    input rise,
    input restart,
    input increment_old_counter,
    input update_hs,
    input [15:0] data,
    input werf,
    input [2:0] wasel,
    input [1:0] ra1sel,
    input [3:0] ra2sel,
    output reg [15:0] out_a,
    output reg [15:0] out_b,
    output reg [15:0] current_counter,
    output reg [15:0] player_score,
    output reg [15:0] high_score
  );
  
  
  
  reg [15:0] M_highScore_d, M_highScore_q = 1'h0;
  reg [15:0] M_playerScore_d, M_playerScore_q = 1'h0;
  reg [15:0] M_currentCounter_d, M_currentCounter_q = 1'h0;
  reg [15:0] M_temp_d, M_temp_q = 1'h0;
  reg [15:0] M_oldCounter_d, M_oldCounter_q = 1'h0;
  reg [15:0] M_terminatingNo_d, M_terminatingNo_q = 1'h0;
  reg [15:0] M_streakNo_d, M_streakNo_q = 1'h0;
  reg [15:0] M_constant0_d, M_constant0_q = 1'h0;
  reg [15:0] M_constant1_d, M_constant1_q = 1'h0;
  reg [15:0] M_constant5_d, M_constant5_q = 1'h0;
  reg [15:0] M_constant7_d, M_constant7_q = 1'h0;
  reg [15:0] M_constant10_d, M_constant10_q = 1'h0;
  
  always @* begin
    M_constant7_d = M_constant7_q;
    M_terminatingNo_d = M_terminatingNo_q;
    M_streakNo_d = M_streakNo_q;
    M_constant5_d = M_constant5_q;
    M_oldCounter_d = M_oldCounter_q;
    M_temp_d = M_temp_q;
    M_highScore_d = M_highScore_q;
    M_currentCounter_d = M_currentCounter_q;
    M_constant10_d = M_constant10_q;
    M_constant0_d = M_constant0_q;
    M_playerScore_d = M_playerScore_q;
    M_constant1_d = M_constant1_q;
    
    M_terminatingNo_d = 7'h78;
    M_constant0_d = 1'h0;
    M_constant1_d = 1'h1;
    M_constant5_d = 3'h5;
    M_constant7_d = 3'h7;
    M_constant10_d = 4'ha;
    if (rise) begin
      M_currentCounter_d = M_currentCounter_q + 2'h3;
    end
    current_counter = M_currentCounter_q;
    player_score = M_playerScore_q;
    high_score = M_highScore_q;
    if (restart) begin
      M_currentCounter_d = 1'h0;
      M_streakNo_d = 1'h1;
    end
    if (increment_old_counter) begin
      M_oldCounter_d = M_currentCounter_q;
    end
    if (update_hs) begin
      M_highScore_d = M_playerScore_q;
    end
    if (werf) begin
      
      case (wasel)
        4'h0: begin
          M_playerScore_d = data;
        end
        4'h1: begin
          M_currentCounter_d = data;
        end
        4'h2: begin
          M_temp_d = data;
        end
        4'h3: begin
          M_streakNo_d = data;
        end
        4'h4: begin
          M_oldCounter_d = data;
        end
        4'h5: begin
          M_highScore_d = data;
        end
      endcase
    end
    
    case (ra1sel)
      2'h0: begin
        out_a = M_playerScore_q;
      end
      2'h1: begin
        out_a = M_currentCounter_q;
      end
      2'h2: begin
        out_a = M_temp_q;
      end
      2'h3: begin
        out_a = M_streakNo_q;
      end
      default: begin
        out_a = 16'h0000;
      end
    endcase
    
    case (ra2sel)
      4'h0: begin
        out_b = M_streakNo_q;
      end
      4'h1: begin
        out_b = M_oldCounter_q;
      end
      4'h2: begin
        out_b = M_highScore_q;
      end
      4'h3: begin
        out_b = M_terminatingNo_q;
      end
      4'h4: begin
        out_b = M_constant0_q;
      end
      4'h5: begin
        out_b = M_constant1_q;
      end
      4'h6: begin
        out_b = M_constant5_q;
      end
      4'h7: begin
        out_b = M_constant7_q;
      end
      4'h8: begin
        out_b = M_constant10_q;
      end
      default: begin
        out_b = 16'h0000;
      end
    endcase
  end
  
  always @(posedge clk) begin
    M_highScore_q <= M_highScore_d;
    
    if (rst == 1'b1) begin
      M_playerScore_q <= 1'h0;
      M_currentCounter_q <= 1'h0;
      M_temp_q <= 1'h0;
      M_oldCounter_q <= 1'h0;
      M_terminatingNo_q <= 1'h0;
      M_streakNo_q <= 1'h0;
      M_constant0_q <= 1'h0;
      M_constant1_q <= 1'h0;
      M_constant5_q <= 1'h0;
      M_constant7_q <= 1'h0;
      M_constant10_q <= 1'h0;
    end else begin
      M_playerScore_q <= M_playerScore_d;
      M_currentCounter_q <= M_currentCounter_d;
      M_temp_q <= M_temp_d;
      M_oldCounter_q <= M_oldCounter_d;
      M_terminatingNo_q <= M_terminatingNo_d;
      M_streakNo_q <= M_streakNo_d;
      M_constant0_q <= M_constant0_d;
      M_constant1_q <= M_constant1_d;
      M_constant5_q <= M_constant5_d;
      M_constant7_q <= M_constant7_d;
      M_constant10_q <= M_constant10_d;
    end
  end
  
endmodule
